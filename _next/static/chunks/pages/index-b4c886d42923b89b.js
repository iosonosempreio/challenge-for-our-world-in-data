(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[405],{5557:function(__unused_webpack_module,__unused_webpack_exports,__webpack_require__){(window.__NEXT_P=window.__NEXT_P||[]).push(["/",function(){return __webpack_require__(8541)}])},8541:function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";let svg,bubble,stroke,label,historyLineBg,historyLine,year,legend;__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{default:function(){return Home}});var jsx_runtime=__webpack_require__(5893),head=__webpack_require__(9008),head_default=__webpack_require__.n(head),react=__webpack_require__(7294),Container=__webpack_require__(682),Row=__webpack_require__(4051),Col=__webpack_require__(1555),Form=__webpack_require__(2671),BubbleChart_module=__webpack_require__(335),BubbleChart_module_default=__webpack_require__.n(BubbleChart_module),classnames=__webpack_require__(4184),classnames_default=__webpack_require__.n(classnames),src=__webpack_require__(7771);let x=(0,src.BYU)().clamp(!0),y=(0,src.BYU)().clamp(!0),r=(0,src.PUr)(),fillColor=(0,src.PKp)(),width,height,margin={top:50,right:50,bottom:50,left:50},valueline=(0,src.jvg)().defined(d=>d.gdp&&d.lifeExpectancy).curve(src.YY7).x(d=>x(d.gdp)).y(d=>y(d.lifeExpectancy));function handleDisplay(d,i,selection){return i<10||selection.indexOf(d.Entity)>-1?"block":"none"}function handleClick(d,selected,setSelected){let entity=d.Entity,index=selected.indexOf(entity);setSelected(index<0?selected=>[...selected,entity]:selected=>[...selected.filter(s=>s!==entity)])}function BubbleChart(param){let{data,selectedYear,selectedEntities,setSelectedEntities}=param,svgEl=(0,react.useRef)();return(0,react.useEffect)(()=>{!function(selection){svg=selection;let bbox=svg.node().getBoundingClientRect();width=bbox.width,height=bbox.height,svg.select(".bubbles").selectAll("*").remove(),historyLineBg=svg.select(".bubbles").selectAll(".historyLineBg"),historyLine=svg.select(".bubbles").selectAll(".historyLine"),year=svg.select(".bubbles").selectAll(".year"),bubble=svg.select(".bubbles").selectAll(".bubble"),stroke=svg.select(".bubbles").selectAll(".stroke"),label=svg.select(".bubbles").selectAll(".label"),legend=svg.select(".legend")}((0,src.Ys)(svgEl.current))},[]),(0,react.useEffect)(()=>{!function(data,selectedEntities,setSelectedEntities){let selectedHistories=data.histories.filter(d=>selectedEntities.indexOf(d[0])>-1);console.log("update",data,selectedHistories),x.domain(data.extents.gdpExtent).range([margin.left,width-margin.right]),y.domain(data.extents.lifeExtent).range([height-margin.bottom,margin.top]),r.domain([0,data.extents.populationExtent[1]]).range([3,50]),fillColor.domain(data.extents.continents).range(["#66c2a5","#fc8d62","#8da0cb","#e78ac3","#a6d854","#ffd92f","#e5c494","#b3b3b3"]),svg.select(".xAxis").attr("transform","translate(0,".concat(height-margin.bottom,")")).call((0,src.LLu)(x)),svg.select(".yAxis").attr("transform","translate(".concat(margin.left,",0)")).call((0,src.y4O)(y)),svg.selectAll(".xAxisLabel").data(["GDP per capita ($)"]).join("text").attr("class","xAxisLabel").attr("text-anchor","middle").attr("transform","translate(".concat(width/2,", ").concat(height-margin.bottom/4,")")).attr("fill","black").attr("font-weight",600).attr("font-size",12).text(d=>d),svg.selectAll(".yAxisLabel").data(["Life Expectancy (years)"]).join("text").attr("class","yAxisLabel").attr("text-anchor","middle").attr("transform","translate(".concat(margin.left/4-3,",").concat(height/2,") rotate(90)")).attr("fill","black").attr("font-weight",600).attr("font-size",12).text(d=>d);let t=svg.transition().duration(250);historyLineBg=historyLineBg.data(()=>{let grouped=(0,src.Q3u)(selectedHistories,v=>v[0][1],d=>d[0]);return grouped},d=>d[0]).join(enter=>enter.append("path").attr("class","historyLineBg").attr("d",d=>valueline(d[1].filter(dd=>dd.lifeExpectancy&&dd.gdp))).attr("fill","none").attr("stroke","#999").attr("stroke-dasharray","1 3"),update=>update.attr("d",d=>valueline(d[1].filter(dd=>dd.lifeExpectancy&&dd.gdp))),exit=>exit.remove()),historyLine=historyLine.data(()=>{let grouped=(0,src.Q3u)(selectedHistories,v=>v[0][1],d=>d[0]);return grouped},d=>d[0]).join(enter=>enter.append("path").attr("class","historyLine").attr("d",d=>valueline(d[1])).attr("fill","none").attr("stroke-width",1.5).attr("stroke",d=>{let entity=data.dataset.find(dd=>dd.Entity===d[0]);return(0,src.$_Y)(fillColor(entity.continent)).brighter(.25)}),update=>update.attr("d",d=>valueline(d[1])),exit=>exit.remove()),(year=year.data(()=>{let grouped=(0,src.Q3u)(selectedHistories,v=>v[0][1],d=>d[0]);return grouped},d=>d[0]).join(enter=>enter.append("g"),update=>update,exit=>exit.remove())).selectAll("circle").data(d=>d[1].filter(dd=>dd.lifeExpectancy&&dd.gdp)).join("circle").attr("cx",d=>x(d.gdp)).attr("cy",d=>y(d.lifeExpectancy)).attr("fill",d=>fillColor(d.continent)).attr("r",2),bubble=bubble.data(data.dataset,d=>d.Code).join(enter=>enter.append("circle").attr("class","bubble").attr("data-code",d=>d.Code).attr("r",d=>0).attr("cx",d=>x(d.gdp)).attr("cy",d=>y(d.lifeExpectancy)).style("cursor","pointer").attr("fill",d=>{if(!(selectedEntities.length>0))return fillColor(d.continent);{let index=selectedEntities.indexOf(d.Entity);return index>-1?fillColor(d.continent):"transparent"}}).on("mouseover",(event,d)=>{label.filter(dd=>dd.Entity===d.Entity).style("display","block")}).on("mouseleave",(event,d)=>{label.style("display",(d,i)=>handleDisplay(d,i,selectedEntities))}).on("click",(event,d)=>handleClick(d,selectedEntities,setSelectedEntities)).call(enter=>enter.transition(t).attr("r",d=>r(d["Population (historical estimates)"]))),update=>update.attr("cx",d=>x(d.gdp)).attr("cy",d=>y(d.lifeExpectancy)).attr("r",d=>r(d["Population (historical estimates)"])).attr("fill",d=>{if(!(selectedEntities.length>0))return fillColor(d.continent);{let index=selectedEntities.indexOf(d.Entity);return index>-1?fillColor(d.continent):"transparent"}}).on("mouseover",(event,d)=>{label.filter(dd=>dd.Entity===d.Entity).style("display","block")}).on("mouseleave",(event,d)=>{label.style("display",(d,i)=>handleDisplay(d,i,selectedEntities))}).on("click",(event,d)=>handleClick(d,selectedEntities,setSelectedEntities)),exit=>exit.call(exit=>exit.transition(t).style("opacity",0).remove())),stroke=stroke.data(data.dataset,d=>d.Code).join(enter=>enter.append("circle").attr("class","stroke").attr("data-code",d=>d.Code).attr("r",d=>0).attr("cx",d=>x(d.gdp)).attr("cy",d=>y(d.lifeExpectancy)).attr("fill","none").attr("stroke",d=>{if(!(selectedEntities.length>0))return"white";{let index=selectedEntities.indexOf(d.Entity);return index>-1?"white":fillColor(d.continent)}}).style("opacity",.5).call(enter=>enter.transition(t).attr("r",d=>r(d["Population (historical estimates)"]))),update=>update.attr("cx",d=>x(d.gdp)).attr("cy",d=>y(d.lifeExpectancy)).attr("r",d=>r(d["Population (historical estimates)"])).attr("stroke",d=>{if(!(selectedEntities.length>0))return"white";{let index=selectedEntities.indexOf(d.Entity);return index>-1?"white":fillColor(d.continent)}}),exit=>exit.call(exit=>exit.transition(t).style("opacity",0).remove())),label=label.data(data.dataset,d=>d.Code).join(enter=>enter.append("text").attr("class","label").attr("data-code",d=>d.Code).attr("x",d=>x(d.gdp)).attr("y",d=>y(d.lifeExpectancy)-r(d["Population (historical estimates)"])).attr("fill","#444").attr("font-size",12).attr("text-anchor","middle").style("opacity",0).text(d=>d.Entity).style("pointer-events","none").style("display",(d,i)=>handleDisplay(d,i,selectedEntities)).call(enter=>enter.transition(t).style("opacity",1)),update=>update.attr("x",d=>x(d.gdp)).attr("y",d=>y(d.lifeExpectancy)-r(d["Population (historical estimates)"])).style("display",(d,i)=>handleDisplay(d,i,selectedEntities)).raise(),exit=>exit.call(exit=>exit.transition(t).style("opacity",0).remove())),historyLine.raise(),bubble.raise(),stroke.raise(),label.raise(),legend.raise(),legend.selectAll("*").remove(),function(selection,data){console.log(data);let f=(0,src.WUZ)(".2s");selection.append("text").attr("font-size",12).attr("font-weight","600").text("Population");let area=selection.append("g").attr("class","areas").selectAll(".area").data([data.extents.populationExtent[1],1e5]).join("g").attr("class","area").attr("transform",(d,i)=>"translate(".concat(r(data.extents.populationExtent[1]),", ").concat(2*r(data.extents.populationExtent[1])+10,")"));area.append("circle").attr("r",d=>r(d)).attr("fill","white").attr("stroke","black").attr("cy",d=>-r(d)),area.append("text").attr("y",(d,i)=>1===i?0:-(2*r(d))+11).attr("x",d=>r(data.extents.populationExtent[1])).attr("font-size",12).text(d=>f(d));let areasBBox=selection.select(".areas").node().getBBox();selection.append("text").attr("font-size",12).attr("font-weight","600").attr("x",areasBBox.width+25).text("Continents");let continent=selection.append("g").attr("class","continents").selectAll(".continent").data(data.extents.continents,(d,i)=>i).join("g").attr("class","continent").attr("transform",(d,i)=>"translate(".concat(areasBBox.width+25,", ").concat(15*i+10,")"));continent.append("rect").attr("width",10).attr("height",10).attr("fill",d=>fillColor(d)),continent.append("text").attr("x",15).attr("y",10).attr("font-size",12).text(d=>d);let continentsBBox=selection.select(".continents").node().getBBox();selection.append("line").attr("x1",0).attr("y1",0).attr("x2",20).attr("y2",0).attr("fill","none").attr("stroke","#333").attr("stroke-width","2").attr("stroke-dasharray","1 3").attr("transform","translate(".concat(areasBBox.width+25+continentsBBox.width+25,", ").concat(12.5,")")),selection.append("text").attr("font-size",12).attr("x",areasBBox.width+25+continentsBBox.width+25).attr("y",37.5).text("No historical data"),selection.append("text").attr("font-size",12).attr("y",continentsBBox.height+37.5).text("Year by year, elements appear according to availability of data.");let legendBBox=selection.node().getBBox();legend.attr("transform","translate(".concat(width-legendBBox.width-margin.right,", ").concat(height-legendBBox.height-margin.bottom,")"))}(legend,data)}(data,selectedEntities,setSelectedEntities)},[data,selectedYear,selectedEntities]),(0,jsx_runtime.jsxs)("svg",{ref:svgEl,className:classnames_default()(BubbleChart_module_default().bubbleChartSVG),children:[(0,jsx_runtime.jsx)("g",{className:"xAxis"}),(0,jsx_runtime.jsx)("g",{className:"yAxis"}),(0,jsx_runtime.jsx)("g",{className:"bubbles"}),(0,jsx_runtime.jsx)("g",{className:"legend"})]})}var router=__webpack_require__(1163);function RangeInput(param){let{extent,value,setValue}=param;return(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsxs)(Form.Z.Label,{children:["Selected year: ",value]}),(0,jsx_runtime.jsx)(Form.Z.Range,{onChange:e=>setValue(e.target.value),min:extent[0],max:extent[1],defaultValue:value})]})}var sources_namespaceObject=JSON.parse('[{"label":"Population","description":"long-run human population over time stitched from multiple sources","source":"Gapminder (v6); HYDE (v3.2); UN (2022)","url":"https://ourworldindata.org/grapher/population"},{"label":"Life Expectancy","description":"Long-runlifeexpectancyovertimemeasuredinyears","source":"Riley (2005), Clio Infra (2015), and UN Population Division (2019)","url":"https://ourworldindata.org/grapher/life-expectancy"},{"label":"GDP per capita","description":"long-run GDP per capita measured in constant 2011 international $","source":"Maddison Project Database 2020 (Bolt and van Zanden, 2020)","url":"https://ourworldindata.org/grapher/gdp-per-capita-maddison-2020"}]'),index_esm=__webpack_require__(3750);function Home(){let{basePath}=(0,router.useRouter)(),[fullData,setFullData]=(0,react.useState)(),[data,setData]=(0,react.useState)(),[selectedContinents,setSelectedContinents]=(0,react.useState)(),[selectedYear,setSelectedYear]=(0,react.useState)(),[selectedEntities,setSelectedEntities]=(0,react.useState)([]);return(0,react.useEffect)(()=>{let requests=[(0,src.gyn)(basePath+"/data/population.csv",src.rA8),(0,src.gyn)(basePath+"/data/life-expectancy.csv",src.rA8),(0,src.gyn)(basePath+"/data/gdp-per-capita-maddison-2020.csv",src.rA8),(0,src.gyn)(basePath+"/data/continents-according-to-our-world-in-data.csv",src.rA8)];Promise.all(requests).then(results=>{let datasets=results.map(dataset=>dataset.filter(d=>d.Code&&"OWID_WRL"!==d.Code&&d.Year>=1810&&d.Year<=2018)),continents=(0,src.Xxj)(datasets[3],d=>d.Continent).map(d=>d[0]),populationExtent=(0,src.Wem)(datasets[0],d=>d["Population (historical estimates)"]),minGdp=(0,src.VV$)(datasets[2],d=>d["GDP per capita"]),maxGdp=(0,src.VV$)([(0,src.Fp7)(datasets[2],d=>d["GDP per capita"]),8e4]),histories=(0,src.Q3u)(datasets[0],v=>{let life=datasets[1].filter(r=>r.Entity===v[0].Entity),gdp=datasets[2].filter(r=>r.Entity===v[0].Entity),continent=datasets[3].find(r=>r.Entity===v[0].Entity).Continent;return v.map(d=>{var ref,ref1;return{year:d.Year,continent,lifeExpectancy:null===(ref=life.find(l=>l.Year===d.Year))||void 0===ref?void 0:ref["Life expectancy"],gdp:null===(ref1=gdp.find(g=>g.Year===d.Year))||void 0===ref1?void 0:ref1["GDP per capita"]}})},d=>d.Entity);setFullData({datasets,histories,extents:{populationExtent,timeExtent:[1810,2018],lifeExtent:[35,90],gdpExtent:[minGdp,maxGdp],continents}}),setSelectedYear(2018),setSelectedContinents(continents.map(d=>({label:d,active:!0})))})},[]),(0,react.useEffect)(()=>{if(fullData&&selectedYear){let dataset=(0,src.Q3u)(fullData.datasets[0],v=>v.find(vv=>vv.Year==selectedYear),d=>d.Entity);dataset=(dataset=(dataset=(dataset=dataset.filter(d=>d[1])).map(d=>{let datum=d[1],continentRecord=fullData.datasets[3].find(record=>record.Entity===datum.Entity);continentRecord&&(datum.continent=continentRecord.Continent);let lifeExpectancyRecord=fullData.datasets[1].find(record=>record.Entity===datum.Entity&&record.Year==selectedYear);lifeExpectancyRecord&&(datum.lifeExpectancy=lifeExpectancyRecord["Life expectancy"]);let gdpRecord=fullData.datasets[2].find(record=>record.Entity===datum.Entity&&record.Year==selectedYear);return gdpRecord&&(datum.gdp=gdpRecord["GDP per capita"]),datum})).filter(d=>d.lifeExpectancy&&d.gdp)).sort((a,b)=>b["Population (historical estimates)"]-a["Population (historical estimates)"]),fullData.extents,selectedContinents.filter(d=>d.active).map(d=>d.label),setData({dataset,histories:fullData.histories,extents:{...fullData.extents}})}},[fullData,selectedYear,selectedContinents]),(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)(head_default(),{children:(0,jsx_runtime.jsx)("title",{children:"Human progress | Interactive bubble chart"})}),(0,jsx_runtime.jsxs)(Container.Z,{children:[(0,jsx_runtime.jsx)(Row.Z,{children:(0,jsx_runtime.jsxs)(Col.Z,{className:"mb-3",children:[(0,jsx_runtime.jsx)("h1",{className:classnames_default()(),children:"Human progress from 1810 to 2018"}),(0,jsx_runtime.jsxs)("p",{children:["Every circle represents a country. ",(0,jsx_runtime.jsx)(index_esm.m0A,{})," click on them to see historical evolution of their wealth."]})]})}),data&&(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)(Row.Z,{children:(0,jsx_runtime.jsx)(Col.Z,{className:"mb-3",style:{height:"70vh"},children:(0,jsx_runtime.jsx)(BubbleChart,{data:data,selectedYear:selectedYear,selectedEntities:selectedEntities,setSelectedEntities:setSelectedEntities})})}),(0,jsx_runtime.jsxs)(Row.Z,{children:[(0,jsx_runtime.jsx)(Col.Z,{sm:"12",className:"mb-2",children:(0,jsx_runtime.jsx)("h4",{children:"FIlter continents or select a year"})}),(0,jsx_runtime.jsx)(Col.Z,{sm:"12",className:"mb-3",children:(0,jsx_runtime.jsx)(RangeInput,{extent:data.extents.timeExtent,value:selectedYear,setValue:setSelectedYear})}),(0,jsx_runtime.jsx)(Col.Z,{className:"mb-5 d-flex",children:selectedContinents.map(d=>(0,jsx_runtime.jsx)(Form.Z.Check,{className:"me-3",type:"checkbox",id:"continent-".concat(d.label),label:"".concat(d.label),defaultChecked:d.active,onChange:()=>console.log(d.label)},d.label))})]}),(0,jsx_runtime.jsx)(Row.Z,{children:(0,jsx_runtime.jsxs)(Col.Z,{children:[(0,jsx_runtime.jsx)("h4",{children:"Data sources"}),(0,jsx_runtime.jsx)("ul",{className:"mb-5",children:sources_namespaceObject.map(source=>(0,jsx_runtime.jsxs)("li",{children:[(0,jsx_runtime.jsx)("h6",{children:source.label}),(0,jsx_runtime.jsxs)("p",{children:[source.description," ",(0,jsx_runtime.jsx)("a",{href:source.url,children:"(link)"})]})]},source.label))}),(0,jsx_runtime.jsx)("p",{className:"fst-italic",children:"Data Visualization Challenge for Our World in Data. November 2022"})]})})]})]})]})}},335:function(module){module.exports={bubbleChartSVG:"BubbleChart_bubbleChartSVG__m0Nbo"}}},function(__webpack_require__){__webpack_require__.O(0,[13,479,774,888,179],function(){return __webpack_require__(__webpack_require__.s=5557)}),_N_E=__webpack_require__.O()}]);